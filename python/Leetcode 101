# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isSymmetric(self, root):
        """
        :type root: TreeNode
        :rtype: bool
        """
        if root is None:
            return True
        leftTree=root.left
        rightTree=root.right
        queue1=[]
        queue2=[]
        queue1.append(leftTree)
        queue2.append(rightTree)
        while(len(queue1)>0 and len(queue2)>0):
            p=queue1.pop(0)
            q=queue2.pop(0)
            if p is None:
                if q is not None:
                    return False
                else:
                    continue
            elif q is None:
                return False
            if p.val!=q.val:
                return False
            queue1.append(p.left)
            queue1.append(p.right)
            queue2.append(q.right)
            queue2.append(q.left)
        return True
