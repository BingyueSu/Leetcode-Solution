# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def widthOfBinaryTree(self, root):
        """
        :type root: TreeNode
        :rtype: int
        """
        if root is None:
            return 0
        maxWidth=0
        queue=[(root,0)]
        while len(queue)>0:
            length=len(queue)
            left_index=queue[0][1]
            for _ in range(length):
                curr,index=queue.pop(0)
                if curr.left is not None:
                    queue.append((curr.left,2*index))
                if curr.right is not None:
                    queue.append((curr.right,2*index+1))
            maxWidth=max(maxWidth,index-left_index+1)
        return(maxWidth)
