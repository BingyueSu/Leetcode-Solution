class Solution:
    def permute(self, nums: List[int]) -> List[List[int]]:
        res=[]
        def backtrack(num,perm,visited):
            for i in range(len(visited)):
                if not visited[i]:
                    perm.append(num[i])
                    visited[i]=True
                    if sum(visited)==len(nums):
                        res.append(perm.copy())
                    backtrack(num,perm,visited)
                    perm.pop()
                    visited[i]=False
        backtrack(nums,[],[False]*len(nums))
        return res
