# Definition for a binary tree node.
# class TreeNode(object):
#     def __init__(self, val=0, left=None, right=None):
#         self.val = val
#         self.left = left
#         self.right = right
class Solution(object):
    def isSameTree(self, p, q):
        """
        :type p: TreeNode
        :type q: TreeNode
        :rtype: bool
        """
        queue1=[]
        queue2=[]
        if p is None:
            if q is None:
                return True
            else:
                return False
        elif q is None:
            return False
        queue1.append(p)
        queue2.append(q)
        while(len(queue1)>0 and len(queue2)>0):
            curr1=queue1.pop(0)
            curr2=queue2.pop(0)
            if curr1.val!=curr2.val:
                return False
            if curr1.left is not None:
                queue1.append(curr1.left)
                if curr2.left is not None:
                    queue2.append(curr2.left)
                else:
                    return False
            elif curr2.left is not None:
                    return False
            if curr1.right is not None:
                queue1.append(curr1.right)
                if curr2.right is not None:
                    queue2.append(curr2.right)
                else:
                    return False
            elif curr2.right is not None:
                    return False
        return True
