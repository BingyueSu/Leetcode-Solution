class Solution(object):
    def minEatingSpeed(self, piles, H):
        """
        :type piles: List[int]
        :type H: int
        :rtype: int
        """
        def finish(S): 
            hour=0
            for i in piles:
                hour=hour+(int((i-1)/S)+1)
            return hour<=H
        aveH=int(H/len(piles))+1
        low=int(min(piles)/aveH)+1
        high=max(piles)
        while low<high:
            new=int((low+high)/2)
            if(finish(new)==True):
                high=new
            else:
                low=new+1
        return(low)

Solution.minEatingSpeed(Solution, piles=[3,6,7,11], H=8)
