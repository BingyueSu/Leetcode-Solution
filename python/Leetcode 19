# Definition for singly-linked list.
# class ListNode(object):
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next

###Two passes
class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
        p1=head
        count=1
        while p1.next:
            p1=p1.next
            count+=1
        p1=head
        if(n==count):
            return(p1.next)
        nstart=count-n+1
        count=1
        while p1.next:
            count+=1
            if(count==nstart):
                p2=p1.next.next
                p1.next=p2
                break
            p1=p1.next
        return(head)
 
 ###One pass
 class Solution(object):
    def removeNthFromEnd(self, head, n):
        """
        :type head: ListNode
        :type n: int
        :rtype: ListNode
        """
        dummy=ListNode()
        dummy.next=head
        first=head
        second=dummy
        for i in range(n):
            first=first.next
        while first:
            first=first.next
            second=second.next
        second.next=second.next.next
        return dummy.next
