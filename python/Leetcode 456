###
class Solution(object):
    def find132pattern(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        intervals=[]
        low_intervals=0
        for i in range(1,len(nums)):
            if nums[i]<nums[i-1]:
                if low_intervals<i-1:
                    intervals.append([low_intervals,i-1])
                low_intervals=i
            for interval in intervals:
                if nums[interval[0]]<nums[i]<nums[interval[1]]:
                    return True
        return False
        
###stack
class Solution(object):
    def find132pattern(self, nums):
        """
        :type nums: List[int]
        :rtype: bool
        """
        if len(nums)<3:
            return False
        min_array=[0]*len(nums)
        min_array[0]=nums[0]
        for i in range(1,len(nums)):
            min_array[i]=min(min_array[i-1],nums[i])
        stack=[]
        for i in range(len(nums)-1,-1,-1):
            if nums[i]<=min_array[i]:
                continue
            while stack and stack[-1]<=min_array[i]:
                stack.pop()
            if stack and stack[-1]<nums[i]:
                return True
            stack.append(nums[i])
        return False
