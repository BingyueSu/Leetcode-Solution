class Solution(object):
    def minPathSum(self, grid):
        """
        :type grid: List[List[int]]
        :rtype: int
        """
        m=len(grid)
        n=len(grid[0])
        path=[[0]*n for _ in range(m)]
        for i in reversed(range(m)):
            for j in reversed(range(n)):
                if(i==m-1 and j==n-1):
                    path[i][j]=grid[i][j]
                elif(i==m-1 and j<n-1):
                    path[i][j]=grid[i][j]+path[i][j+1]
                elif(i<m-1 and j==n-1):
                    path[i][j]=grid[i][j]+path[i+1][j]
                else:
                    path[i][j]=grid[i][j]+min(path[i][j+1],path[i+1][j])
        return(path[0][0])
