class Solution(object):
    def threeSumClosest(self, nums, target):
        """
        :type nums: List[int]
        :type target: int
        :rtype: int
        """
        nums.sort()
        n=len(nums)
        dist=float('inf')
        closet=0
        for i in range(n):
            low=i+1
            high=n-1
            while(low<high):
                if(abs(target-(nums[i]+nums[low]+nums[high]))<dist):
                    dist=abs(target-(nums[i]+nums[low]+nums[high]))
                    closet=nums[i]+nums[low]+nums[high]
                if(target-(nums[i]+nums[low]+nums[high])>0):
                    low+=1
                elif(target-(nums[i]+nums[low]+nums[high])<0):
                    high-=1
                else:
                    return(target)
        return(closet)
