class Solution:
    def letterCombinations(self, digits: str) -> List[str]:
        letters = {"2": "abc", "3": "def", "4": "ghi", "5": "jkl", 
                   "6": "mno", "7": "pqrs", "8": "tuv", "9": "wxyz"}
        if(len(digits)==0):
            return([])
        result=[]
        def recur(position,path):
            if(position==len(digits)):
                result.append("".join(path))
                return
            for j in range(len(letters[digits[position]])):
                path.append(letters[digits[position]][j])
                recur(position+1,path)
                path.pop()
            return  
        recur(0,[])
        return(result)
