class Solution:
    def combinationSum2(self, candidates: List[int], target: int) -> List[List[int]]:
        res=[]
        count=Counter(candidates)
        count=[[c,count[c]] for c in count]
        def backtrack(temp,loc,count):
            for i in range(loc,len(count)):
                num,freq=count[i]
                if freq>0:
                    if sum(temp)+num<=target:
                        temp.append(num)
                        count[i][1]-=1
                        if sum(temp)==target:
                            res.append(list(temp))
                        backtrack(temp,i,count)
                        temp.pop()
                        count[i][1]+=1
        backtrack([],0,count)
        return res
